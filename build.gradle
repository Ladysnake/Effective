plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
	id 'io.github.ladysnake.chenille' version '0.11.3'
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/effective.accesswidener")
}

repositories {
	// publishing
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}

	// cloth config
	maven { url "https://maven.shedaniel.me/" }

	// satin
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}

	// mod menu
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}

	maven { url 'https://jitpack.io' }

	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
	}

	maven { url 'https://masa.dy.fi/maven' }

	// mialee misc
	maven { url "https://maven.willbl.dev/releases" }

}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier "intermediary-v2" }
	// Replace the above line with the block below if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	/*
	mappings loom.layered {
		mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
		officialMojangMappings()
	}
	*/
	modImplementation libs.quilt.loader

	// QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
	// Quilted Fabric API will automatically pull in the correct QSL version.
	modImplementation libs.quilted.fabric.api
	// modImplementation libs.bundles.quilted.fabric.api // If you wish to use Fabric API's deprecated modules, you can replace the above line with this one

	// mod menu
	modCompileOnly "com.terraformersmc:modmenu:${mod_menu_version}"
	modRuntimeOnly "com.terraformersmc:modmenu:${mod_menu_version}"

	// midnightlib
	modImplementation include("maven.modrinth:midnightlib:${midnightlib_version}-fabric")

	// satin
	modImplementation include("org.ladysnake:satin:${satin_version}")

	// lodestone lib
	modImplementation include("com.github.Arathain:LodestoneLib-Quilt:${lodestone_version}")

	// iris and sodium
	modCompileOnly("maven.modrinth:sodium:${project.sodium_version}")
	modRuntimeOnly("maven.modrinth:sodium:${project.sodium_version}")
	modRuntimeOnly("maven.modrinth:iris:${project.iris_version}")
	runtimeOnly compileOnly("org.anarres:jcpp:1.4.14") // for iris
	runtimeOnly('org.joml:joml:1.10.4') // for sodium

	// mixin extras
	include( implementation( annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${project.mixin_extras_version}")))
}

chenille {
	javaVersion = 17
	configurePublishing {
		mainArtifact = remapJar.archiveFile
		withLadysnakeMaven()
		withCurseforgeRelease()
		withGithubRelease()
		withModrinthRelease()
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

java {
	withSourcesJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}
